```
output: html_notebook
source("~/Documents/GitHub/Codecademy-python3/R/predicting-income-social.R")
# plot age
age_plot <- ggplot(psid, aes(x=age)) +
geom_bar()
install.packages(c("dplyr", "evaluate", "htmltools", "lava", "lifecycle", "Matrix", "pROC", "rlang", "stringi", "stringr", "xfun"))
library(ggplot2)
psid <- read.csv("psid_2017.csv")
---
title: "Predicting Income with Social Data"
---
#title: "Predicting Income with Social Data"
#output: html_notebook
---
```{r message=FALSE, warning=FALSE}
---
#title: "Predicting Income with Social Data"
#output: html_notebook
---
# load packages and data
library(ggplot2)
library(ggplot2)
library(dplyr)
library(modelr)
psid <- read.csv("psid_2017.csv")
psid <- read.csv("../psid_2017.csv")
psid <- read.csv("psid_2017.csv")
psid <- read.csv("psid_2017.csv")
library(ggplot2)
library(dplyr)
library(modelr)
psid <- read.csv("psid_2017.csv")
---
#title: "Predicting Income with Social Data"
#output: html_notebook
---
# load packages and data
library(ggplot2)
library(dplyr)
library(modelr)
psid <- read.csv("psid_2017.csv")
pwd
getwd()
setwd(dir = /Documents/Github/Codecademy-python3)
setwd("/Documents/Github/Codecademy-python3")
setwd(`Documents/GitHub/Codecademy-python3/`)
setwd("Documents/GitHub/Codecademy-python3/")
getwd()
setwd(/R/)
setwd("/R")
setwd("/Users/andrewcheng/Documents/GitHub/Codecademy-python3/R")
getwd()
---
#title: "Predicting Income with Social Data"
#output: html_notebook
---
# load packages and data
library(ggplot2)
#---
#title: "Predicting Income with Social Data"
#output: html_notebook
#---
# load packages and data
library(ggplot2)
library(dplyr)
library(modelr)
psid <- read.csv("psid_2017.csv")
# view data structure
head(psid)
# plot age
age_plot <- ggplot(psid, aes(x=age)) +
geom_bar()
age_plot
# filter to reasonable age group
psid_clean <- psid %>%
filter(age > 18 & age < 75)
# plot flitered age
age_plot_clean <- ggplot(psid_clean,
aes(x=age)) +
geom_bar()
age_plot_clean
# plot education
edu_plot <- ggplot(psid_clean,
aes(x=education_years)) +
geom_boxplot()
edu_plot
# filter to reasonable education levels
psid_clean <- psid_clean %>%
filter(education_years < 25 & education_years > 5)
edu_plot2 <- ggplot(psid_clean,
aes(x=education_years)) +
geom_boxplot()
edu_plot2
# plot income
income_plot <- ggplot(
psid_clean,
aes(x=labor_income)) +
geom_boxplot()
income_plot
# view income summary statistics
summary(psid_clean$labor_income)
# plot mean income by age
age_mean_plot <- psid_clean %>%
group_by(age) %>%
summarise(mean_income = mean(labor_income)) %>%
ggplot(
aes(x=age, y=mean_income)) +
geom_point()
age_mean_plot
# subset data points into train and test sets
set.seed(123)
sample <- sample(c(TRUE, FALSE), nrow(psid_clean), replace = T, prob = c(0.6,0.4))
# define train and test
train <- psid_clean[sample, ]
test <- psid_clean[!sample, ]
# build model
model <- lm(labor_income ~ education_years, data=train)
# plot against LOESS model
prediction_model <- ggplot(
train, aes(education_years, labor_income)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se=FALSE, color="red")
prediction_model
# compute r-squared
r_sq <- summary(model)$r.squared
# uncomment to write out r-squared interpretation
sprintf("Based on a simple linear regression model, we have determined that %s percent of the variation in respondent income can be predicted by a respondent's education level.", r_sq)
# build second model
model2 <- lm(labor_income ~ education_years + age + gender, data=train)
r_sq_2 <- summary(model2)$r.squared
# uncomment to write out r-squared interpretation
sprintf("Based on a simple linear regression model, we have determined that %s percent of the variation in respondent income can be predicted by a respondent's education level, age and gender.", r_sq_2)
# plot predictions versus observed
prediction_model2 <- train %>%
add_predictions(model2) %>%
ggplot(aes(age, labor_income)) +
geom_point() +
geom_line(aes(y=pred), color="blue")
prediction_model2
# write out model results
summary(model2)
# extract education coefficent
education_coefficent <- model2$coefficients[2]
# uncomment to write out coefficent interpretation
sprintf("Based on a multiple linear regression model of education, age, and gender, for every additional year of formal education, the average American resident's income increases by $%s.", education_coefficent)
```
#---
#title: "Predicting Income with Social Data"
#output: html_notebook
#---
# load packages and data
library(ggplot2)
library(dplyr)
library(modelr)
psid <- read.csv("psid_2017.csv")
# view data structure
head(psid)
# plot age
age_plot <- ggplot(psid, aes(x=age)) +
geom_bar()
age_plot
# filter to reasonable age group
psid_clean <- psid %>%
filter(age > 18 & age < 75)
# plot flitered age
age_plot_clean <- ggplot(psid_clean,
aes(x=age)) +
geom_bar()
age_plot_clean
# plot education
edu_plot <- ggplot(psid_clean,
aes(x=education_years)) +
geom_boxplot()
edu_plot
# filter to reasonable education levels
psid_clean <- psid_clean %>%
filter(education_years < 25 & education_years > 5)
edu_plot2 <- ggplot(psid_clean,
aes(x=education_years)) +
geom_boxplot()
edu_plot2
# plot income
income_plot <- ggplot(
psid_clean,
aes(x=labor_income)) +
geom_boxplot()
income_plot
# view income summary statistics
summary(psid_clean$labor_income)
# plot mean income by age
age_mean_plot <- psid_clean %>%
group_by(age) %>%
summarise(mean_income = mean(labor_income)) %>%
ggplot(
aes(x=age, y=mean_income)) +
geom_point()
age_mean_plot
# subset data points into train and test sets
set.seed(123)
sample <- sample(c(TRUE, FALSE), nrow(psid_clean), replace = T, prob = c(0.6,0.4))
# define train and test
train <- psid_clean[sample, ]
test <- psid_clean[!sample, ]
# build model
model <- lm(labor_income ~ education_years, data=train)
# plot against LOESS model
prediction_model <- ggplot(
train, aes(education_years, labor_income)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se=FALSE, color="red")
prediction_model
# compute r-squared
r_sq <- summary(model)$r.squared
# uncomment to write out r-squared interpretation
sprintf("Based on a simple linear regression model, we have determined that %s percent of the variation in respondent income can be predicted by a respondent's education level.", r_sq)
# build second model
model2 <- lm(labor_income ~ education_years + age + gender, data=train)
r_sq_2 <- summary(model2)$r.squared
# uncomment to write out r-squared interpretation
sprintf("Based on a simple linear regression model, we have determined that %s percent of the variation in respondent income can be predicted by a respondent's education level, age and gender.", r_sq_2)
# plot predictions versus observed
prediction_model2 <- train %>%
add_predictions(model2) %>%
ggplot(aes(age, labor_income)) +
geom_point() +
geom_line(aes(y=pred), color="blue")
prediction_model2
# write out model results
summary(model2)
# extract education coefficent
education_coefficent <- model2$coefficients[2]
# uncomment to write out coefficent interpretation
sprintf("Based on a multiple linear regression model of education, age, and gender, for every additional year of formal education, the average American resident's income increases by $%s.", education_coefficent)
#---
#title: "Predicting Income with Social Data"
#output: html_notebook
#---
# load packages and data
library(ggplot2)
library(dplyr)
library(modelr)
psid <- read.csv("psid_2017.csv")
# view data structure
head(psid)
# plot age
age_plot <- ggplot(psid, aes(x=age)) +
geom_bar()
age_plot
# filter to reasonable age group
psid_clean <- psid %>%
filter(age > 18 & age < 75)
# plot flitered age
age_plot_clean <- ggplot(psid_clean,
aes(x=age)) +
geom_bar()
age_plot_clean
# plot education
edu_plot <- ggplot(psid_clean,
aes(x=education_years)) +
geom_boxplot()
edu_plot
# filter to reasonable education levels
psid_clean <- psid_clean %>%
filter(education_years < 25 & education_years > 5)
edu_plot2 <- ggplot(psid_clean,
aes(x=education_years)) +
geom_boxplot()
edu_plot2
# plot income
income_plot <- ggplot(
psid_clean,
aes(x=labor_income)) +
geom_boxplot()
income_plot
# view income summary statistics
summary(psid_clean$labor_income)
# plot mean income by age
age_mean_plot <- psid_clean %>%
group_by(age) %>%
summarise(mean_income = mean(labor_income)) %>%
ggplot(
aes(x=age, y=mean_income)) +
geom_point()
age_mean_plot
# subset data points into train and test sets
set.seed(123)
sample <- sample(c(TRUE, FALSE), nrow(psid_clean), replace = T, prob = c(0.6,0.4))
# define train and test
train <- psid_clean[sample, ]
test <- psid_clean[!sample, ]
# build model
model <- lm(labor_income ~ education_years, data=train)
# plot against LOESS model
prediction_model <- ggplot(
train, aes(education_years, labor_income)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se=FALSE, color="red")
prediction_model
# compute r-squared
r_sq <- summary(model)$r.squared
# uncomment to write out r-squared interpretation
sprintf("Based on a simple linear regression model, we have determined that %s percent of the variation in respondent income can be predicted by a respondent's education level.", r_sq)
# build second model
model2 <- lm(labor_income ~ education_years + age + gender, data=train)
r_sq_2 <- summary(model2)$r.squared
# uncomment to write out r-squared interpretation
sprintf("Based on a simple linear regression model, we have determined that %s percent of the variation in respondent income can be predicted by a respondent's education level, age and gender.", r_sq_2)
# plot predictions versus observed
prediction_model2 <- train %>%
add_predictions(model2) %>%
ggplot(aes(age, labor_income)) +
geom_point(color="teal") +
geom_line(aes(y=pred), color="blue")
prediction_model2
#---
#title: "Predicting Income with Social Data"
#output: html_notebook
#---
# load packages and data
library(ggplot2)
library(dplyr)
library(modelr)
psid <- read.csv("psid_2017.csv")
# view data structure
head(psid)
# plot age
age_plot <- ggplot(psid, aes(x=age)) +
geom_bar()
age_plot
# filter to reasonable age group
psid_clean <- psid %>%
filter(age > 18 & age < 75)
# plot flitered age
age_plot_clean <- ggplot(psid_clean,
aes(x=age)) +
geom_bar()
age_plot_clean
# plot education
edu_plot <- ggplot(psid_clean,
aes(x=education_years)) +
geom_boxplot()
edu_plot
# filter to reasonable education levels
psid_clean <- psid_clean %>%
filter(education_years < 25 & education_years > 5)
edu_plot2 <- ggplot(psid_clean,
aes(x=education_years)) +
geom_boxplot()
edu_plot2
# plot income
income_plot <- ggplot(
psid_clean,
aes(x=labor_income)) +
geom_boxplot()
income_plot
# view income summary statistics
summary(psid_clean$labor_income)
# plot mean income by age
age_mean_plot <- psid_clean %>%
group_by(age) %>%
summarise(mean_income = mean(labor_income)) %>%
ggplot(
aes(x=age, y=mean_income)) +
geom_point()
age_mean_plot
# subset data points into train and test sets
set.seed(123)
sample <- sample(c(TRUE, FALSE), nrow(psid_clean), replace = T, prob = c(0.6,0.4))
# define train and test
train <- psid_clean[sample, ]
test <- psid_clean[!sample, ]
# build model
model <- lm(labor_income ~ education_years, data=train)
# plot against LOESS model
prediction_model <- ggplot(
train, aes(education_years, labor_income)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se=FALSE, color="red")
prediction_model
# compute r-squared
r_sq <- summary(model)$r.squared
# uncomment to write out r-squared interpretation
sprintf("Based on a simple linear regression model, we have determined that %s percent of the variation in respondent income can be predicted by a respondent's education level.", r_sq)
# build second model
model2 <- lm(labor_income ~ education_years + age + gender, data=train)
r_sq_2 <- summary(model2)$r.squared
# uncomment to write out r-squared interpretation
sprintf("Based on a simple linear regression model, we have determined that %s percent of the variation in respondent income can be predicted by a respondent's education level, age and gender.", r_sq_2)
# plot predictions versus observed
prediction_model2 <- train %>%
add_predictions(model2) %>%
ggplot(aes(age, labor_income)) +
geom_point(color="orange") +
geom_line(aes(y=pred), color="blue")
prediction_model2
# write out model results
summary(model2)
# extract education coefficent
education_coefficent <- model2$coefficients[2]
# uncomment to write out coefficent interpretation
sprintf("Based on a multiple linear regression model of education, age, and gender, for every additional year of formal education, the average American resident's income increases by $%s.", education_coefficent)
